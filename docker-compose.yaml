version: '3'
services:
# Redis - Key-value Store
  redis:
    container_name: redis
    image: redis/redis-stack-server:latest
    restart: always
    environment:
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispassword}

    entrypoint: redis-server --appendonly yes --requirepass $REDIS_PASSWORD --maxmemory 512mb --maxmemory-policy allkeys-lru 
      --loadmodule /opt/redis-stack/lib/redisearch.so 
      --loadmodule /opt/redis-stack/lib/rejson.so
    networks:
      - api-network
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis-data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
  mongodb:
    image: mongo:latest
    container_name: ChatGPTDb
    restart: on-failure
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-mongodb}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-mongodb}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-mongodb}
      MONGO_USER_NAME: ${MONGO_USER_NAME:-mongouser}
      MONGO_USER_PASSWORD: ${MONGO_USER_PASSWORD:-mongouserpass}
    networks:
      - api-network
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - ./mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
      - mongodb-data:/data/db
      - mongodb-log:/var/log/mongodb
      - mongodb-config:/data/configdb
  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: ${DOCKER_USER:-noname}/playwithchatgpt-api:${API_TAG:-latest}
    ports:
      - 8080:8080
    volumes:
      - api-workspace:/app/workspace
    environment:
      LOG_LEVEL: ${LOG_LEVEL}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MONGO_DATABASE: ${MONGO_DATABASE:-PlayWithChatGPT}
      MONGO_PORT: ${MONGO_PORT:-27017}
      MONGO_HOST: ${MONGO_HOST:-mongodb}
      MONGO_USER_NAME: ${MONGO_USER_NAME:-mongouser}
      MONGO_USER_PASSWORD: ${MONGO_USER_PASSWORD:-mongouserpass}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redispassword}
    networks: 
      - api-network
    depends_on:
      - mongodb
      - redis
  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: ${DOCKER_USER:-noname}/playwithchatgpt-web:${WEB_TAG:-latest}
    ports:
      - "80:80"
    networks: 
      - web-network
      - api-network
    depends_on:
      - api
networks:
  api-network:
  web-network:
volumes:
  mongodb-data:
    driver: local
  mongodb-log:
    driver: local
  mongodb-config:
    driver: local
  redis-data:
    driver: local
  api-workspace:
    driver: local
